
- config:
    transfer:
      origin_endpoint_id: "mock_origin_endpoint_id"
      destination_endpoint_id: "mock_destination_endpoint_id"
      source_environment: {'mock_source_key': 'mock_source_value'}
      destination_environment:
        storage_mappings: {'mock_destination_key': 'mock_destination_value'}
      network_map: {'mock_network_key': 'mock_network_value'}
      user_scripts: {'mock_scripts_key': 'mock_scripts_value'}
      notes: "mock_notes"
      origin_minion_pool_id: "mock_origin_minion_pool_id"
      destination_minion_pool_id: "mock_destination_minion_pool_id"
      instance_osmorphing_minion_pool_mappings:
        mock_instance_1: "mock_pool_1"
        mock_instance_2: "mock_pool_2"
    updated_values:
      source_environment: {'mock_updated_source_key': 'mock_updated_source_value'}
      destination_environment:
        storage_mappings: {'mock_updated_destination_key': 'mock_updated_destination_value'}
      network_map: {'mock_updated_network_key': 'mock_updated_network_value'}
      user_scripts: {'mock_updated_scripts_key': 'mock_updated_scripts_value'}
      notes: "mock_updated_notes"
      origin_minion_pool_id: "mock_updated_origin_minion_pool_id"
      destination_minion_pool_id: "mock_updated_destination_minion_pool_id"
      instance_osmorphing_minion_pool_mappings:
        mock_instance_1: "mock_updated_pool_1"
        mock_instance_2: "mock_updated_pool_2"
      clone_disks: true
      skip_os_morphing: true
  expected_result:
    source_environment:
      mock_updated_source_key: 'mock_updated_source_value'
      mock_source_key: 'mock_source_value'
    destination_environment:
      network_map:
        mock_updated_network_key: 'mock_updated_network_value'
        mock_network_key: 'mock_network_value'
      storage_mappings:
        mock_updated_destination_key: 'mock_updated_destination_value'
    network_map:
      mock_updated_network_key: 'mock_updated_network_value'
      mock_network_key: 'mock_network_value'
    notes: "mock_updated_notes"
    origin_minion_pool_id: "mock_updated_origin_minion_pool_id"
    destination_minion_pool_id: "mock_updated_destination_minion_pool_id"
    instance_osmorphing_minion_pool_mappings:
      mock_instance_1: "mock_updated_pool_1"
      mock_instance_2: "mock_updated_pool_2"
    clone_disks: true
    skip_os_morphing: true

- config:
    transfer:
      origin_endpoint_id: "mock_origin_endpoint_id"
      destination_endpoint_id: "mock_destination_endpoint_id"
      source_environment: {'mock_source_key': 'mock_source_value'}
      destination_environment:
        storage_mappings: {'mock_destination_key': 'mock_destination_value'}
      network_map: {'mock_network_key': 'mock_network_value'}
      user_scripts: {'mock_scripts_key': 'mock_scripts_value'}
      notes: "mock_notes"
      origin_minion_pool_id: "mock_origin_minion_pool_id"
      destination_minion_pool_id: "mock_destination_minion_pool_id"
      instance_osmorphing_minion_pool_mappings:
        mock_instance_1: "mock_pool_1"
        mock_instance_2: "mock_pool_2"
      clone_disks: true
    updated_values: {}
  expected_result:
    source_environment:
      mock_source_key: 'mock_source_value'
    destination_environment:
      network_map:
        mock_network_key: 'mock_network_value'
      storage_mappings:
        mock_destination_key: 'mock_destination_value'
    network_map:
      mock_network_key: 'mock_network_value'
    notes: "mock_notes"
    clone_disks: true
    skip_os_morphing: false

- config:
    transfer:
      origin_endpoint_id: "mock_origin_endpoint_id"
      destination_endpoint_id: "mock_destination_endpoint_id"
      user_scripts: {'mock_scripts_key': 'mock_scripts_value'}
      notes: "mock_notes"
      origin_minion_pool_id: "mock_origin_minion_pool_id"
      destination_minion_pool_id: "mock_destination_minion_pool_id"
      instance_osmorphing_minion_pool_mappings:
        mock_instance_1: "mock_pool_1"
        mock_instance_2: "mock_pool_2"
      skip_os_morphing: true
    updated_values: {}
  expected_result:
    source_environment: {}
    destination_environment: {}
    network_map: {}
    notes: "mock_notes"
    skip_os_morphing: true
    clone_disks: false
