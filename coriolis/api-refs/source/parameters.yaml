# path variables
deployment_id_path:
  description: |
    The id of the deployment
  in: path
  required: true
  type: uuid
endpoint_id_path:
  description: |
    The id of the endpoint.
  in: path
  required: true
  type: uuid
execution_id_path:
  description: |
    The id of the transfer execution.
  in: path
  required: true
  type: uuid
instance_name_base64_path:
  description: |
    The name of the instance in base64
  in: path
  required: true
  type: string
minion_pool_id_path:
  description: |
    The ID of the minion pool.
  in: path
  type: uuid
  required: true
platform:
  description: |
    The type of cloud service platform.
  in: path
  type: string
  required: true
provider_id:
  description: |
    The ID of cloud service provider.
  in: path
  type: integer
  required: true
region_id_path:
  description: |
    The ID of the region.
  in: path
  type: uuid
  required: true
service_id_path:
  description: |
    The ID of the service.
  in: path
  type: uuid
  required: true
transfer_id_path:
  description: |
    The ID of the transfer.
  in: path
  type: uuid
  required: true
transfer_schedule_id_path:
  description: |
    The id of the transfer schedule.
  in: path
  type: uuid
  required: true
transfer_tasks_execution_id_path:
  description: |
     The id of the transfer execution.
  in: path
  type: uuid
  required: true
# query variables
instance_limit:
  description: |
    Returns a number of items up to a limit value.
  in: query
  required: false
  type: integer
# body variables
base_id:
  description: |
    The id of the deployment in the mariadb database.
  in: body
  type: string
  required: true
connection_info:
  description: >
    A JSON encoded or a barbican secret ref containing password, username and
    other cloud-specific information for connection to an endpoint.
  in: body
  type: object
  required: true
connection_info_schema:
  description: |
    Object containing the connection info schema of the platform.
  in: body
  type: object
  required: false
deployment_cancel:
  description: |
    Object containing information about the type of deployment cancellation.
  in: body
  type: string
  required: true
deployment_cancel_force:
  description: |
    Boolean representing whether the deployment cancellation is forced.
  in: body
  type: boolean
  required: true
deployment_clone_disks:
  description: |
    Boolean representing whether the deployment is started from transferred disks.
  in: body
  type: boolean
  required: true
deployment_created_at:
  description: |
    Timestamp of deployment creation.
  in: body
  type: string
  required: true
deployment_deleted:
  description: |
    Whether a deployment is deleted or not.
    1 for deleted
    0 for not deleted
  in: body
  type: integer
  required: true
deployment_deleted_at:
  description: |
    The timestamp of deletion for a deployment.
  in: body
  type: object
  required: true
deployment_destination_endpoint_id:
  description: |
    The id of the deployment destination cloud endpoint.
  in: body
  type: uuid
  required: true
deployment_force:
  description: |
    Boolean representing whether the deployment is forced or not.
  in: body
  type: boolean
  required: true
deployment_id:
  description: |
    The id of a coriolis deployment.
  in: body
  type: uuid
  required: true
deployment_info:
  description: |
    Information about the instance that is deployed.
  in: body
  type: object
  required: true
deployment_instances:
  description: |
    An array of all instance identifiers to be deployed.
  in: body
  type: array
  required: true
deployment_last_execution_status:
  description: |
    Last execution status of the current deployment.
  in: body
  type: string
  required: true
deployment_notes:
  description: |
    Notes about the deployment.
  in: body
  type: object
  required: true
deployment_object:
  description: |
    Object containing deployment details.
  in: body
  type: object
  required: true
deployment_origin_endpoint_id:
  description: |
    The id of the deployment source cloud endpoint.
  in: body
  type: uuid
  required: true
deployment_shutdown_instances:
  description: |
    A boolean which describes whether the execution to shutdown the source
    instance for the deployment process.
  in: body
  type: boolean
  required: true
deployment_tasks:
  description: |
    The array of tasks that the deployment is going through,
    contains id,instance name, status, and other details about
    each task.
  in: body
  type: array
  required: true
deployment_type:
  description: |
    The type of deployment, can also be a transfer.
  in: body
  type: string
  required: true
deployment_updated_at:
  description: |
    Timestamp of last deployment update.
  in: body
  type: string
  required: true
deployments_array:
  description: |
    Array of deployment objects.
  in: body
  type: array
  required: true
destination_environment:
  description: |
    JSON containing the options of how the instance will be
    configured on the destination cloud differently from the
    source cloud, such as network mapping.
  in: body
  type: object
  required: true
destination_environment_schema:
  description: |
    Object containing the destination environment schema of the platform.
  in: body
  type: object
  required: false
destination_minion_pool_id:
  description: |
    Pre-existing minion pool ID on the destination platform.
  in: body
  type: string
  required: true
destination_minion_pool_options:
  description: |
    Array that contains the parameter options possible for a minion pool with the endpoint as destination.
  in: body
  type: array
  required: true
destination_options:
  description: |
    An array that contains the parameter options possible for
    a deployment or transfer with the endpoint as destination.
  in: body
  type: object
  required: true
diagnostic_application:
  description: |
    Name of the Coriolis service.
  in: body
  type: string
  required: true
diagnostic_hostname:
  description: |
    The hostname of the Coriolis service container.
  in: body
  type: string
  required: true
diagnostic_ip_addresses:
  description: |
    IP addresses of all the interfaces attached to the Coriolis appliance.
  in: body
  type: object
  required: true
diagnostic_licences:
  description: |
    The list of licenses installed on the Coriolis appliance.
  in: body
  type: object
  required: true
diagnostic_licensing_status:
  description: |
    The licensing status of the Coriolis appliance.
  in: body
  type: object
  required: true
diagnostic_os_info:
  description: |
    The Coriolis appliance's host OS information.
  in: body
  type: array
  required: true
diagnostic_packages:
  description: |
    The list of PIP packages installed on the Coriolis service container.
  in: body
  type: array
  required: true
diagnostic_reservations:
  description: |
    The list of reservations made by the Coriolis appliance.
  in: body
  type: object
  required: false
diagnostics_array:
  description: |
    Array of diagnostics objects.
  in: body
  type: array
  required: true
endpoint_created_at:
  description: |
    ISO 8601 formatted date of endpoint creation.
  in: body
  type: string
  required: true
endpoint_deleted:
  description: |
    Integer representing whether endpoint is deleted or not. (0 or 1)
  in: body
  type: integer
  required: true
endpoint_deleted_at:
  description: |
    ISO 8601 formatted date of endpoint deletion.
  in: body
  type: string
  required: true
endpoint_description:
  description: |
    The description of the endpoint.
  in: body
  type: string
  required: true
endpoint_id:
  description: |
    The id of a cloud endpoint.
  in: body
  type: uuid
  required: true
endpoint_mapped_regions:
  description: |
    List containing the Coriolis regions this endpoint is available to.
  in: body
  type: array
  required: true
endpoint_name:
  description: |
    The name of the endpoint.
  in: body
  type: string
  required: true
endpoint_object:
  description: |
    An endpoint object containing name, id, type, and connection information.
  in: body
  type: object
  required: true
endpoint_type:
  description: |
    The type of cloud service platform.
  in: body
  type: string
  required: true
endpoint_updated_at:
  description: |
    ISO 8601 formatted date of when the endpoint was last updated.
  in: body
  type: string
  required: true
endpoints_array:
  description: |
    Array of endpoint objects.
  in: body
  type: array
  required: true
instance_array:
  description: |
    Array of instance objects
  in: body
  type: array
  required: true
instance_cores_per_socket:
  description: |
    Number of cores per socket used by the instance.
  in: body
  type: integer
  required: false
instance_devices:
  description: |
    Object containing information about instance devices like NICs, disks, etc.
  in: body
  type: object
  required: true
instance_firmware_type:
  description: |
    The type of firmware of the VM.
  in: body
  type: string
  required: false
instance_flavor:
  description: |
    Name or ID of the flavor used by the instance.
  in: body
  type: string
  required: true
instance_id:
  description: |
    The id of the instance.
  in: body
  type: uuid
  required: true
instance_identifier:
  description: |
    The unique identifier of a virtual machine.
  in: body
  type: string
  required: true
instance_memory_mb:
  description: |
    The memory of the instance in MB.
  in: body
  type: integer
  required: true
instance_name:
  description: |
    The name of an instance.
  in: body
  type: string
  required: true
instance_nested_virtualization:
  description: |
    Whether the instance is run on a nested virtualization environment.
  in: body
  type: boolean
  required: false
instance_num_cpu:
  description: |
    The numbers of CPUs of an instance.
  in: body
  type: string
  required: true
instance_object:
  description: |
    Object containing information about the requested instance.
  in: body
  type: object
  required: true
instance_os_type:
  description: |
    The OS type of an instance.
  in: body
  type: string
  required: true
instance_osmorphing_minion_pool_mappings:
  description: |
    Mapping between deployed instance name and their respective morphing minion pool IDs.
  in: body
  type: object
  required: true
instance_secure_boot:
  description: |
    Whether the machine has UEFI Secure Boot enabled or not.
  in: body
  type: boolean
  required: false
maximum_minions:
  description: |
    Maximum number of minion machines allowed to be allocated for the minion pool.
  in: body
  type: integer
  required: false
minimum_minions:
  description: |
    Minimum number of minion machines to be allocated for the minion pool.
  in: body
  type: integer
  required: false
minion_max_idle_time:
  description: |
    Number of seconds for the minion machines of a minion_pool to be allowed in idle state before executing its retention strategy.
  in: body
  type: integer
  required: false
minion_pool_allocate:
  description: |
    An object that describes minion pool allocation action.
  in: body
  type: object
  required: true
minion_pool_created_at:
  description: |
    Timestamp of minion pool creation.
  in: body
  type: string
  required: true
minion_pool_deallocate:
  description: |
    An object that describes minion pool deallocation action.
  in: body
  type: object
  required: true
minion_pool_deleted:
  description: |
    Whether a minion pool is deleted or not.
    1 for deleted
    0 for not deleted
  in: body
  type: string
  required: true
minion_pool_deleted_at:
  description: |
    Timestamp of minion pool deletion.
  in: body
  type: string
  required: true
minion_pool_endpoint_id:
  description: |
    The ID of the minion pool endpoint.
  in: body
  type: uuid
  required: true
minion_pool_environment_options:
  description: |
    The configuration for the minion machines of the minion pool.
  in: body
  type: object
  required: true
minion_pool_events:
  description: |
    Array of events occuring on the minion pool.
  in: body
  type: array
  required: true
minion_pool_id:
  description: |
    The ID of the minion pool.
  in: body
  type: uuid
  required: true
minion_pool_machines:
  description: |
    Array of minion machine objects allocated in a minion_pool.
  in: body
  type: array
  required: true
minion_pool_maintenance_trust_id:
  description: |
    Maintenance trust_id of the minion pool.
  in: body
  type: uuid
  required: true
minion_pool_name:
  description: |
    The name of the minion pool.
  in: body
  type: string
  required: true
minion_pool_notes:
  description: |
    Notes about the minion pool.
  in: body
  type: string
  required: false
minion_pool_object:
  description: |
    Object containing information about a minion pool.
  in: body
  type: object
  required: true
minion_pool_os_type:
  description: |
    The OS type for the minion machines of this minion pool.
  in: body
  type: string
  required: true
minion_pool_platform:
  description: |
    The platform of the minion pool. Can either be 'source' or 'destination'.
  in: body
  type: string
  required: true
minion_pool_progress_updates:
  description: |
    Array of progress updates for minion machines of a minion pool.
  in: body
  type: array
  required: true
minion_pool_refresh:
  description: |
    An object describing minion pool refresh action.
  in: body
  type: object
  required: true
minion_pool_retention_strategy:
  description: |
    The retention strategy used for the minion machines of the minion pool. Can either be 'delete' or 'poweroff'.
  in: body
  type: string
  required: false
minion_pool_shared_resources:
  description: |
    Mapping of shared resources and their respective IDs for the minion machines of the minion pool.
  in: body
  type: object
  required: true
minion_pool_skip_allocation:
  description: |
    Boolean indicating whether or not to skip allocating machines upon minion pool creation.
  in: body
  type: boolean
  required: false
minion_pool_status:
  description: |
    The status of the minion pool. Accepted values: 'UNKNOWN', 'ERROR',
    'DEALLOCATED', 'VALIATING_INPUTS', 'ALLOCATING_SHARED_RESOURCES',
    'ALLOCATING_MACHINES', 'DEALLOCATING_MACHINES',
    'DEALLOCATING_SHARED_RESOURCES', 'ALLOCATED', 'IN_MAINTENANCE'.
  in: body
  type: string
  required: true
minion_pool_updated_at:
  description: |
    Timestamp of minion pool update.
  in: body
  type: string
  required: true
minion_pools_array:
  description: |
    The array of minion pools.
  in: body
  type: array
  required: true
network_id:
  description: |
    The unique identifier of a network.
  in: body
  type: uuid
  required: true
network_map:
  description: |
    Object containing the network mapping.
  in: body
  type: object
  required: true
network_name:
  description: |
    The name of a network.
  type: string
  in: body
  required: true
network_port_security_enabled:
  description: |
    Boolean value representing whether the port security is enabled or not for the listed network.
  in: body
  type: boolean
  required: true
networks_array:
  description: |
    An array of ``network`` objects.
  type: string
  in: body
  required: true
option_config_default:
  description: |
    The default option for the parameter.
  in: body
  type: string
  required: true
option_name:
  description: |
    The name of the parameter.
  in: body
  type: string
  required: true
option_values:
  description: |
    An array of possible values for the respective parameter.
  in: body
  type: array
  required: true
origin_minion_pool_id:
  description: |
    Pre-existing minion pool ID on the source platform.
  in: body
  type: string
  required: true
project_id:
  description: |
    Coriolis supports multiple projects, this is the respective project's id.
  in: body
  type: uuid
  required: true
provider_schemas:
  description: |
    Object containing the requested provider schema.
  in: body
  type: object
  required: true
provider_type:
  description: |
    The type of cloud service provider.
  in: body
  type: array
  required: true
provider_types:
  description: |
    Array containing the provider types that a platform currently supports.
  in: body
  type: array
  required: true
providers:
  description: |
    Array that contains all the available types of cloud service providers
  in: body
  type: array
  required: true
region_created_at:
  description: |
    Timestamp of region creation.
  in: body
  type: string
  required: true
region_deleted:
  description: |
    Value representing whether the region is deleted or not.
  in: body
  type: integer
  required: true
region_deleted_at:
  description: |
    Timestamp of region deletion.
  in: body
  type: string
  required: true
region_description:
  description: |
    Details about the region.
  in: body
  type: string
  required: false
region_enabled:
  description: |
    Boolean value representing whether the region is enabled or not.
  in: body
  type: boolean
  required: true
region_id:
  description: |
    The ID of the region.
  in: body
  type: uuid
  required: true
region_mapped_endpoints:
  description: |
    Array of cloud endpoint IDs that are mapped to this region.
  in: body
  type: array
  required: true
region_mapped_services:
  description: |
    Array of service IDs that are mapped to this region.
  in: body
  type: array
  required: true
region_name:
  description: |
    The name of the region.
  in: body
  type: string
  required: true
region_object:
  description: |
    Object containing details about a region.
  in: body
  type: object
  required: true
region_updated_at:
  description: |
    Timestamp of last region update.
  in: body
  type: string
  required: true
regions_array:
  description: |
    Array of region objects.
  in: body
  type: array
  required: true
scenario_type: 
  description: |
    The type of scenario.
  in: body
  type: string
  required: true
schemas:
  description: |
    Object containing the platform's requested schema.
  in: body
  type: object
  required: true
service_binary:
  description: |
    The name of the service binary.
  in: body
  type: string
  required: true
service_created_at:
  description: |
    Timestamp of service creation.
  in: body
  type: string
  required: true
service_deleted:
  description: |
    Value representing whether the service is deleted or not.
  in: body
  type: string
  required: true
service_deleted_at:
  description: |
    Timestamp of service deletion.
  in: body
  type: string
  required: true
service_enabled:
  description: |
    Boolean representing whether the service is enabled or not.
  in: body
  type: boolean
  required: true
service_host:
  description: |
    The hostname of the service.
  in: body
  type: string
  required: true
service_id:
  description: |
    The ID of the service.
  in: body
  type: uuid
  required: true
service_mapped_regions:
  description: |
    Array of regions mapped to this service.
  in: body
  type: array
  required: false
service_object:
  description: |
    Object containing information about the service.
  in: body
  type: object
  required: true
service_providers:
  description: |
    Object containing mappings of provider names and provider types available to this service.
  in: body
  type: object
  required: true
service_specs:
  description: |
    Object containing miscellaneous specifications about the service.
  in: body
  type: object
  required: true
service_status:
  description: |
    The status of the service. Possible values: "UP", "DOWN", "UNKNOWN".
  in: body
  type: string
  required: true
service_topic:
  description: |
    The name of the service's messaging topic.
  in: body
  type: string
  required: true
service_updated_at:
  description: |
    Timestamp of last service update.
  in: body
  type: string
  required: true
services_array:
  description: |
    Array of service objects.
  in: body
  type: array
  required: true
skip_os_morphing:
  description: |
    Boolean whether to skip os morphing or not.
  in: body
  type: boolean
  required: true
source_environment:
  description: |
    JSON containing the options specific to the source cloud of the instance.
  in: body
  type: object
  required: true
source_environment_schema:
  description: |
    Object containing the source environment schema of the platform.
  in: body
  type: object
  required: false
source_minion_pool_options:
  description: |
    Array that contains the paramter options possible for a minion pool with the endpoint as source.
  in: body
  type: array
  required: true
source_options:
  description: |
    An array that contains the parameter options possible for
    a deployment or transfer with the endpoint as source.
  in: body
  type: object
  required: true
storage_backends:
  description: |
    Array containing storage backends available to an endpoint.
  in: body
  type: array
  required: true
storage_id:
  description: |
    The unique identifier of a storage backend
  in: body
  type: string
  required: true
storage_map:
  description: |
    Object containing storage backend mapping.
  in: body
  type: object
  required: true
storage_name:
  description: |
    Name of the storage backend
  in: body
  type: string
  required: true
transfer_action_id:
  description: |
    Id of the transfer excution.
  in: body
  type: uuid
  required: true
transfer_created_at:
  description: |
    Timestamp of transfer creation.
  in: body
  type: string
  required: true
transfer_delete_disks:
  description: |
    An object that describes delete disk transfer action.
  in: body
  type: object
  required: true
transfer_deleted:
  description: |
    Value representing whether the transfer is deleted or not
  in: body
  type: integer
  required: true
transfer_deleted_at:
  description: |
    Timestamp of transfer deletion if applicable.
  in: body
  type: string
  required: true
transfer_destination_endpoint_id:
  description: |
    The id of the destination cloud endpoint for the transfer action.
  in: body
  type: uuid
  required: true
transfer_destination_environment:
  description: |
    The configuration on the destination cloud provider for the transfer.
  in: body
  type: string
  required: false
transfer_empty_execution_array:
  description: |
    An empty array. Use the ``/transfers/{transfer_id}`` request to get the transfer executions.
  in: body
  type: array
  required: true
transfer_execution:
  description: |
    An ``execution`` object.
  in: body
  type: object
  required: true
transfer_execution_action:
  description: |
    An ``action`` object regarding the specific operation.
  in: body
  type: array
  required: true
transfer_execution_array:
  description: |
    An array of ``execution`` objects.
  in: body
  type: array
  required: true
transfer_execution_created_at:
  description: |
    Timestamp of creation time of the transfer execution.
  in: body
  type: integer
  required: true
transfer_execution_deleted:
  description: |
    Integer representing whether the execution is deleted or not.
  in: body
  type: integer
  required: true
transfer_execution_deleted_at:
  description: |
    Timestamp of deletion time, if applicable for the transfer execution.
  in: body
  type: integer
  required: true
transfer_execution_force:
  description: |
    A boolean which describes whether to force the cancellation of a transfer
    execution.
  in: body
  type: boolean
  required: true
transfer_execution_id:
  description: |
    The id of the transfer execution.
  in: body
  type: array
  required: true
transfer_execution_number:
  description: |
    Integer representing n'th execution of the transfer.
  in: body
  type: integer
  required: true
transfer_execution_object:
  description: |
    An ``execution`` object
  in: body
  type: boolean
  required: true
transfer_execution_status:
  description: >
    The status of the transfer execution, can either be ``RUNNING`` , ``ERROR``
    or ``COMPLETED``
  in: body
  type: string
  required: true
transfer_execution_tasks:
  description: |
    An array of all the tasks regarding a specific transfer execution.
  in: body
  type: array
  required: true
transfer_execution_type:
  description: |
    The type of the transfer execution. Can either be 'transfer_execution', 'transfer_update' or 'transfer_disks_delete'
  in: body
  type: string
  required: true
transfer_execution_updated_at:
  description: |
    Timestamp of last transfer execution update.
  in: body
  type: string
  required: true
transfer_id:
  description: |
    The id of the transfer.
  in: body
  type: uuid
  required: true
transfer_instances:
  description: |
    Name array of the  instances to be transferred.
  in: body
  type: array
  required: true
transfer_last_execution_status:
  description: |
    Last execution status of the current transfer.
  in: body
  type: string
  required: true
transfer_network_map:
  description: |
    Object containing the network mapping.
  in: body
  type: object
  required: false
transfer_notes:
  description: |
    Notes about the transfer.
  in: body
  type: string
  required: true
transfer_object:
  description: |
    Object containing information about a transfer.
  in: body
  type: object
  required: true
transfer_origin_endpoint_id:
  description: |
    The id of the origin cloud endpoint for the transfer action.
  in: body
  type: uuid
  required: true
transfer_scenario_type:
  description: |
    The type of transfer scenario.
  in: body
  type: string
  required: true
transfer_schedule:
  description: |
    Object containing the schedule information(month, day of month, etc.).
  in: body
  type: object
  required: true
transfer_schedule_created_at:
  description: |
    Timestamp of transfer schedule creation.
  in: body
  type: string
  required: true
transfer_schedule_day_of_month:
  description: |
    The day of the month at which to run.
  in: body
  type: integer
  required: false
transfer_schedule_day_of_week:
  description: |
    The day of week in which to run.
  in: body
  type: integer
  required: false
transfer_schedule_deleted:
  description: |
    Value representing whether the transfer schedule is deleted or not
  in: body
  type: string
  required: true
transfer_schedule_deleted_at:
  description: |
    Timestamp of transfer schedule deletion if applicable.
  in: body
  type: string
  required: true
transfer_schedule_enabled:
  description: |
    Whether the schedule is enabled or not.
  in: body
  type: boolean
  required: true
transfer_schedule_expiration:
  description: |
    ISO8601 formatted date which sets the transfer schedule expiration date.
  in: body
  type: string
  required: true
transfer_schedule_expiration_request:
  description: |
    ISO8601 formatted date which sets the transfer schedule expiration date.
  in: body
  type: string
  required: false
transfer_schedule_hour:
  description: |
    The hour of the day at which to run.
  in: body
  type: integer
  required: false
transfer_schedule_id:
  description: |
    The ID of the transfer schedule.
  in: body
  type: uuid
  required: true
transfer_schedule_minute:
  description: |
    The minute of the hour at which to run.
  in: body
  type: integer
  required: false
transfer_schedule_month:
  description: |
    The month in which to run.
  in: body
  type: integer
  required: false
transfer_schedule_updated_at:
  description: |
    Timestamp of last transfer schedule update.
  in: body
  type: string
  required: true
transfer_schedules:
  description: |
    Array of transfer schedules.
  in: body
  type: array
  required: true
transfer_shutdown_instances:
  description: |
    A boolean which describes whether the execution to shutdown the source
    instance for the transfer process.
  in: body
  type: boolean
  required: true
transfer_source_environment:
  description: |
    The configuration on the source cloud provider for the transfer.
  in: body
  type: object
  required: false
transfer_storage_map:
  description: |
    Object containing storage backend mapping.
  in: body
  type: object
  required: false
transfer_type:
  description: |
    Type of coriolis action, in this case, a transfer.
  in: body
  type: string
  required: true
transfer_update_notes:
  description: |
    Notes about the transfer.
  in: body
  type: string
  required: false
transfer_updated_at:
  description: |
    Timestamp of last transfer update.
  in: body
  type: string
  required: true
transfers_array:
  description: |
    Array of transfer objects.
  in: body
  type: array
  required: true
user_id:
  description: |
    Coriolis supports multiple users, this is the respective user's id.
  in: body
  type: uuid
  required: true
user_scripts:
  description: |
    Mapping between instances selected for deployment and custom scripts to be run during OSMorphing stage.
  in: body
  type: object
  required: false
valid_connection:
  description: |
    A boolean value representing whether the endpoint connection is valid.
  in: body
  type: boolean
  required: true
validate_connection:
  description: |
    An object that contains the validate connection action for the
    endpoint connection.
  in: body
  type: object
  required: true
validation_message:
  description: |
    The error message in case of endpoint validation failure.
  in: body
  type: string
  required: true
